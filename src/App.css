@charset "utf-8";

/* Declare Root styles. */

/* Using variables to keep the layout and CSS styles consistent across the entire design of the website. */
:root {
    /* Color Pallete Variables. */
    --primary-color: #567fca;
    --white: #ffffff;
    --slate-black: #141414;
    --light-slate-black: #131212;
    --tint: rgba(84, 125, 201, 0.05);
    --tint-mobile: rgba(84, 125, 201, 0.5);
    /* Font Family Variables. */
    --heading-font: 'nasalization', sans-serif;
    --links-font: 'ocr-a-std', monospace;
    --body-font: 'museo-sans-rounded', sans-serif;
    /* Font Sizing Variables. */
    --font-xxs: 0.9rem;
    --font-xs: 1.2rem;
    --font-sm: 1.4rem;
    --font-md: 1.6rem;
    --font-lg: 1.8rem;
    --font-xlg: 2rem;
    --font-xxlg: 2.2rem;
    --hero-heading: 3.6rem;
    --primary-heading: 4.8rem;
    --sub-heading: 2.8rem;
    --secondary-heading: 3rem;
    /* Transition Variable. */
    --transition: all 0.3s ease-in-out;
  }
  
  /* Apply the border-box sizing to all elements and either before and after elements. */
  html,
  *, ::after, ::before {
    box-sizing: border-box;
  }
  
  /* All elements will inherit the box-sizing set in the root html styles. */
  *::before, *::after, * {
    box-sizing: inherit;
    margin: 0;
    padding: 0;
  }
  
  html {
    line-height: 1.6;
    font-size: 100%;
  }

  /* Start of scrollbar styles for browsers that support these styles. */
body::-webkit-scrollbar {
  width: 7px; /* width of the entire scrollbar */
}

/* Scrollbar track background color */
body::-webkit-scrollbar-track {
  background: var(--slate-black); 
}

body::-webkit-scrollbar-thumb {
  /* Adjust the colour of the scroll thumb */
  background-color: var(--primary-color); 
  /* The roundness of the scroll thumb. */
  border-radius: 25px;
  /* The scrollbar height. */
  height: 2rem;
}

/* End of scrollbar styles. */

/* If the user selects any body copy or elements on the page, adjust the font and background colours. */
*::selection {
  background-color: var(--white);
  color: var(--primary-color);
}
  
  /* Remove the default padding and margins on all heading elements, this way I have more control over individual elements. */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    padding: 0;
    margin: 0;
    /* Overwrite line-height for headings as they are much larger and don't need much spacing between when breaking to a new line.  */
    line-height: 1.2;
    /* Assign the heading font variable to all headings. */
    font-family: var(--heading-font);
  }
  
  p {
    font-family: var(--body-font);
    font-weight: 500;
    font-style: normal;
    font-size: 1.2rem;
    line-height: 1.6;
    transition: var(--transition);
  }
  
  a {
    text-decoration: none;
  }
  
  li {
    list-style: none;
  }
  
  /* Header styles. */
  header {
    width: 100%;
    filter: none;
    z-index: 99;
    transition: var(--transition);
    position: fixed;
  }
  
  /* Nav anchor styles, font family, size, weight, and some letter spacing. */
  nav ul li a {
    color: var(--white);
    font-family: var(--links-font);
    font-weight: 400;
    font-style: normal;
    letter-spacing: 0.05rem;
  }
  
  header .nav-link {
    font-size: 0.9rem;
    transition: var(--transition);
  }
  
  header .nav-link:hover {
    color: var(--primary-color);
  }
  
  nav ul li a {
    /* Set up a transition to be used when hovered later on. */
    transition: 0.3s;
  }
  
  /* Set the links to the primary gold color when hovered over or once a link becomes active. */
  nav ul li a:hover,
  .navbar-dark .navbar-nav .nav-link.active {
    color: var(--primary-color);
  }

  
  /* Background and white space styles of the navbar bootstrap component */
  .navbar {
      /* background-image: radial-gradient(circle, rgba(22, 22, 22, 1) 0%, rgba(24, 24, 24, 1) 100%); */
      background-color: transparent;
      padding: 1rem 0;
      margin: 0;
  }
  
  /* Add spacing between each navbar item. */
  .nav-item {
      padding: 0 0.75rem;
  }
  
  /* Set the canvas width to be minimum 75 vertical width of the viewport at all times regardless of screen size, this is to allow users to click off the menu to close it. It can only be a maximum of 600 pixels wide. */
  @media screen and (max-width: 1200px){
    .offcanvas {
      max-width: min(75vw, 600px)!important;
    }
  
    /* Remove the default canvas border when toggled out from the side. */
    div .offcanvas.offcanvas-end {
      border-left: none;
    }
  }

  [data-bs-theme=dark] .navbar-toggler-icon {
    background-image: url(../src/images/hamburger.svg);
  }


  /* Override bootsrap navbar-toggler button styles. */
  div .navbar-toggler {
      outline: none;
      /* Apply custom size to the hamburger menu */
      font-size: 2rem;
      border: none;
      box-shadow: none;
      padding: 0.5rem;
      /* background-color: var(--light-slate-black);
      border-radius: 0.25rem; */
  }
  
  /* Remove the default box shadow when the toggler button is in the focused state. */
  div .navbar-toggler:focus {
      box-shadow: none;
  }
  
  /* Center the navbar element contents. */
  .navbar > .container-fluid {
    justify-content: center;
  }
  
  #navbarNav > div {
    justify-content: space-between;
    align-items: center;
    align-content: center;
    padding: 0.5rem 3rem;
  }

  nav .navbar-brand {
    margin-right: 0;
  }

  /* Navigation Bar Media Query */
  @media screen and (max-width: 1200px) {
  
      .navbar-nav {
          justify-content: center;
          align-items: center;
          text-align: center;
      }
  
      /* At width of 1200px of the viewport, the container elements will shift back to the left using space between */
      .navbar > .container-fluid {
          justify-content: space-between;
      }
  
      /* Remove the navbar background at smaller device widths, creates a more clean design as I don't have a navigation logo. */
      .navbar {
        background-image: none;
      }
  
      /* White space on the top and bottom of the navigation item elements. */
      .nav-item {
          margin: 1rem 0;
      }
  
      /* Set the background color of the slide out canvas body at smaller screen widths. */
      .offcanvas-body {
          background-color: var(--light-slate-black);          
      }

      #navbarNav > div {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-content: center;
      }

      #logo {
        display: flex;
        margin: 0 auto 2rem auto;
        
      }
  }
  
/* Start of Hero Styles */

/* This wrapper covers the nav and hero section elements, proving a neat background effect with a transparent navigation. I really liked this. */
#hero-wrapper {
  /* Thank you to Adobe Stock for the background image, reference here: https://stock.adobe.com/ca/search/images?k=space+cartoon+background&search_type=usertyped&asset_id=503188436 */
  background-image: radial-gradient(circle, rgba(22, 22, 22, 0.6) 0%, rgba(13, 13, 13, 1) 100%),
  url(../src/images/landing-images/galaxy-background-dark.jpeg);
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  background-attachment: fixed;
  min-height: 100vh;
}

section {
  padding: 0 1rem;
  margin: 0 auto;
}

/* The primary hero section container. */
#hero {
  /* Display as grid to allow for the stacking of content on top of one another. */
  display: grid;
  max-width: 100%;
  /* Set up the grid, creating 12 equal columns with 1 fractional unit. */
  grid-template-columns: repeat(12, 1fr);
  /* Center all content and items. */
  justify-content: center;
  align-content: center;
  align-items: center;
  /* The container will occupy 100% of the viewport.  */
  min-height: 100vh;
  /* Bump the container up slightly with some bottom padding. */
  padding: 15rem 0 8rem 0;
}

/* This is the primary content child of the hero container */
#hero > article {
  /* Positioned in the 3rd column spanning to the 11th column, staying in the first row.. Overlapping the image that is also in the grid container. */
  grid-area: 1 / 3 / 1 / 12;
  /* Make sure the content overlaps the image by setting the z-index to a higher value in the stack order.  */
  z-index: 2;
}

/* This is the primary image child of the hero container.  */
#hero > figure {
  /* Start at the 6th column, ending at the 11th column, stays in the first row. */
  grid-area: 1 / 9 / 1 / 12;
  z-index: 1;
}

/* Keep the image proportions intact by setting a max-width to the image. */
#hero > figure img {
  max-width: 100%;
  /* Cover the container space whenever available. */
  object-fit: cover;
}

#hero > article h1
 {
  color: var(--primary-color);
  /* Dynamically adjust the h1 font between two variables depending on the viewport width, rather than needing to use media queries to change the font sizes it can be done with the clamp function. */
  font-size: clamp(var(--sub-heading), 5vw, var(--hero-heading));
  font-family: var(--heading-font);
  font-weight: 400;
  font-style: normal;
  letter-spacing: 0.10rem;
  text-transform: uppercase;
}

/* Using the clamp function, adjust the font size depending on the viewport width. */
#hero > article h2 {
  font-family: var(--links-font);
  font-weight: 400;
  font-style: normal;
  font-size: clamp(var(--sub-heading), 2vw, var(--section-heading));
  margin: 1rem 0 0 0;
}

/* Adjustments to the hero content width and text alignment. */
#hero > article p {
  max-width: 700px;
  margin: 2rem 0;
  line-height: 1.8;
}

#hero > article h2,
#hero > article p {
  text-align: left;
}

#hero > article h2,
#hero > article p {
  color: var(--white);
}

#hero > article a,
#solaris-features a,
#get-started > article a,
#solar-system-intro > a,
#space-news-intro > a,
#space-news article a,
#add-planet-btn,
#planetary-intro a {
  display: inline-block;
  background-color: white;
  color: var(--light-slate-black);
  box-shadow: 6px 6px 0 0 var(--primary-color);
  outline: 0.15rem solid var(--light-slate-black);
  text-decoration: none;
  padding: 0.8rem 2rem;
  letter-spacing: 0.1rem;
  font-size: var(--font-xxs);
  margin-top: 1rem;
  text-transform: uppercase;
  transition: var(--transition);
  font-family: var(--heading-font);
  min-width: 180px;
}

#planetary-intro a:nth-of-type(2) {
  background-color: var(--primary-color);
  box-shadow: 6px 6px 0 0 var(--white);
  color: var(--white);
}

#hero > article a:hover, 
#solaris-features a:hover,
#get-started > article a:hover,
#solar-system-intro > a:hover,
#space-news-intro > a:hover,
#space-news article a:hover,
#add-planet-btn:hover,
#planetary-intro a:hover  {
  transform: translateY(0.2rem);
  background-color: var(--primary-color);
  color: var(--white);
  box-shadow: 6px 6px 0 0 var(--white);
}

#solaris-features a:hover{
  box-shadow: 6px 6px 0 0 var(--light-slate-black);
}

#planetary-intro a:nth-of-type(2):hover {
  background-color: var(--white);
  color: var(--light-slate-black);
  box-shadow: 6px 6px 0 0 var(--primary-color);
}

.image-wrapper {
  filter: opacity(1);
}

@media screen and (max-width: 1500px){
  .image-wrapper {
    filter: opacity(0.25);
  }
}

/* End of Hero Styles */

#about, #get-started {
  display: grid;
  max-width: 1600px;
  margin: 0 auto;
  min-height: 100vh;
  text-align: center;
  padding: 10rem 1rem;
}

#about h2, #get-started h2 {
  font-size: clamp(var(--font-xlg), 5vw, var(--secondary-heading));
  color: var(--primary-color);
  text-transform: uppercase;
}

#solaris-features {
  margin: 6rem auto 5rem auto;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 4rem;
  padding: 0 1rem;
  transition: var(--transition);
}

@media screen and (max-width: 1366px) {
  
  #solaris-features {
    max-width: 600px;
    grid-template-columns: 1fr;
    margin: 2rem auto;
  }

  #solaris-features article {
    margin: 2rem 0;
  }
  
}

#solaris-features h3 {
  transition: var(--transition);
  color: var(--light-slate-black);
  font-size: clamp(var(--font-lg), 5vw, 2rem);
}

#solaris-features p {
  margin-bottom: 2rem;
  color: var(--light-slate-black);
}

#solaris-features img {
  margin: 2rem 0;
}

.get-started-wrapper {  
  /* Thank you to Adobe Stock for the background image graphic, reference here: https://stock.adobe.com/ca/images/vector-flat-space-design-background-with-small-elements/217913053?prev_url=detail */
  background-image: radial-gradient(circle, rgba(22, 22, 22, 0.7) 0%, rgba(13, 13, 13, 0.95) 100%), 
  url(../src/images/landing-images/galaxy-map-image.jpeg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}

#get-started {
  /* Display as grid to allow for the stacking of content on top of one another. */
  display: grid;
  max-width: 100%;
  /* Set up the grid, creating 12 equal columns with 1 fractional unit. */
  grid-template-columns: repeat(9, 1fr);
  /* Center all content and items. */
  justify-content: center;
  align-content: center;
  align-items: center;
  /* The container will occupy 100% of the viewport.  */
  min-height: 100vh;
  /* Bump the container up slightly with some bottom padding. */
  padding: 10rem 0 8rem 0;
}

#get-started > article {
  /* Positioned in the 3rd column spanning to the 11th column, staying in the first row.. Overlapping the image that is also in the grid container. */
  grid-area: 1 / 5 / 1 / 9;
  /* Make sure the content overlaps the image by setting the z-index to a higher value in the stack order.  */
  z-index: 2;
  color: var(--white);
}

/* This is the primary image child of the hero container.  */
#get-started > figure {
  /* Start at the 6th column, ending at the 11th column, stays in the first row. */
  grid-area: 1 / 2 / 1 / 5;
  z-index: 1;
}

/* Keep the image proportions intact by setting a max-width to the image. */
#get-started > figure img {
  max-width: 100%;
  /* Cover the container space whenever available. */
  object-fit: cover;
}

#get-started > article p {
  max-width: 660px;
  margin: 2rem auto;
}


/* At a max device width of 1200px, these styles will render.  */
@media screen and (max-width: 1200px) {

  /* Add some slight padding on the left and right container edges on smaller screens.  */
  section {
    padding: 0 1rem;
  }

  /* Convert the hero grid container to a single column layout, this will stack the grid children ontop of one another. */
  #hero, #get-started {
    grid-template-columns: 1fr;
    text-align: center;
    padding: 10rem 1rem 3rem 1rem;
  }

  /* Alignment additions for the mobile hero section. */
  #hero > article h2,
  #hero > article p,
  #get-started > article h2,
  #get-started > article p {
    text-align: center;
  }

  #hero > article p {
    margin: 1.5rem auto;
  }

  @media screen and (max-width: 768px){

    p {
      font-size: 1em;
      padding: 0 0.5rem;
    }

    #hero > article p,
    #get-started > article p {
      margin: 2.5rem auto;
    }  

  }

  /* Place each of the grid items in the same row and column tracks to allow them to stack in a centered fashion on smaller screens. */
  #hero > article,
  #get-started > article {
    grid-area: 1 / 1 / 1 / 8;
    padding-bottom: 6rem;
  }

  #hero > figure,
  #get-started > figure {
    grid-area: 1 / 1 / 1 / 8;
  }

}

/* Display the footer as flex to align all the items in the center. */
footer {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0 auto;
  background-color: rgb(10, 10, 10);
  padding: 2rem 0;
}

/* Display the navbar as a row to display the logo and links side by each. */
footer nav .navbar-nav {
  display: flex;
  flex-direction: row;
  justify-content: center;
  margin: 1rem 0 1rem 5rem;
  padding: 0;
}

/* Footer navigation link font styles. */
footer .nav-link {
  margin: 1rem;
  font-family: var(--links-font);
  font-size: var(--font-xxs);
  transition: var(--transition);
}

/* On footer navlink hover, change it to the primary blue colour in the root styles. */
footer .nav-link:hover {
  color: var(--primary-color);
}

/* If the viewport is a max width of 1200px, apply the following styles. */
@media screen and (max-width: 1200px) {

  /* Change the flex direction of the footer contents into a column layout, to allow the child elements to stack. */
  footer {
    flex-direction: column;
    padding: 3rem 0;
  }

  /* At a top margin to the navbar when the parent folds into a column layout. */
  footer nav .navbar-nav {
    margin: 2rem 0 0 0;
  }

  footer .nav-link {
    margin: 0 1rem;
    padding: 0;
  }

}

/* When the viewport width is 768px wide, the navbar containing the links will switch to flex-direction column to prevent overflow. */
@media screen and (max-width: 768px) {

  footer nav .navbar-nav {
    flex-direction: column;
  }
  
}

/* Solar system section and intro wrapper container styles. */
.solar-system-wrapper,
.intro-wrapper,
.space-news-wrapper,
.news-intro,
.planetarium-wrapper,
.planetarium-intro-wrapper {
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  background-attachment: fixed;
  min-height: 100vh;
}

.space-news-wrapper,
.solar-system-wrapper {
  /* Thank you to Adobe Stock for the background image, reference here: https://stock.adobe.com/ca/search/images?k=space+cartoon+background&search_type=usertyped&asset_id=503188436 */
  background-image: radial-gradient(circle, rgba(22, 22, 22, 0.6) 0%, rgba(13, 13, 13, 1) 100%),
  url(../src/images/landing-images/galaxy-background-dark.jpeg);
}

.planetarium-wrapper {
  /* Thank you to Adobe Stock for the background image graphic, reference here: https://stock.adobe.com/ca/images/vector-flat-space-design-background-with-small-elements/217913053?prev_url=detail */
  background-image: radial-gradient(circle, rgba(22, 22, 22, 0.6) 0%, rgba(13, 13, 13, 1) 100%),
  url(../src/images/landing-images/galaxy-map-image.jpeg);
}

.intro-wrapper {
    /* Thank you to Adobe Stock for the background image, reference here: https://stock.adobe.com/ca/images/flat-design-astronauts-float-in-space-vector-illustration-infographic-element/271170840?prev_url=detail */ 
    background-image: radial-gradient(circle, rgba(22, 22, 22, 0.2) 0%, rgba(13, 13, 13, 0.1) 100%),
    url(../src/images/landing-images/happy-astronaut-graphic-light.svg);
}

.news-intro {
    background-image: radial-gradient(circle, rgba(22, 22, 22, 0.2) 0%, rgba(13, 13, 13, 0.1) 100%),
    url(../src/images/landing-images/astronaut-on-moon-light.svg);
    background-size: contain;
    background-position: right;
}

/* Solar system container styles. */
#solar-system, 
#solar-system-intro,
#space-news-intro,
#planetary-intro {
  /* Display the contents as grid and center the content. */
  display: grid;
  align-content: center;
  align-items: center;
  /* The container will cover the entirety of the viewport with a min-height of 100vh. */
  min-height: 100vh;
  /* Max width of 1600px that will automatically center with the automatic left and right margins. */
  max-width: 1600px;
  margin: 0 auto;
  text-align: center;
  transition: var(--transition);
  /* White space between the primary containers. */
  padding-bottom: 15rem;
}

/* Solar system intro styles. */
#solar-system-intro,
#space-news-intro,
#planetary-intro {
  min-height: 60vh;
  padding: 20rem 1rem 15rem 1rem;
}


/* Solar system intro heading styles, clamping the font size to scale dynamically based on the viewport width. */
#solar-system-intro h1,
#space-news-intro h1,
#planetary-intro h1 {
  font-size: clamp(var(--sub-heading), 5vw, var(--hero-heading));
  color: var(--primary-color);
}

/* Solar system intro paragraph styles. */
#solar-system-intro > p,
#space-news-intro > p,
#planetary-intro > p {
  color: var(--white);
  max-width: 800px;
  margin: 2rem auto;
}

/* Solar system intro anchor styles. */
#solar-system-intro > a,
#space-news-intro > a,
#planetary-intro a {
  max-width: 250px;
  margin: 0 auto;
}

/* Planet card container wrapper that holds the planet articles in a 3 column grid of equal size. */
.planet-card-container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 2rem;
  text-align: center;
  margin-top: 5rem;
}

/* When the viewport width is 1200px wide, the planet card container will become a two column layout. */
@media screen and (max-width: 1200px) {

  .planet-card-container {
    grid-template-columns: repeat(2, 1fr);
  }
  
}

/* When the viewport width is 820px wide, the planet card container will become a single column layout. */
@media screen and (max-width: 820px) {

  .planet-card-container {
    grid-template-columns: 1fr;
  }
  
}

/* Start of Card styles */

/*Planet card image styles. */
.planet-img,
.news-img {
  margin: 0;
  padding: 0;
  overflow: hidden;
  border-radius: 0.25rem;
}

/* All the planet images will render with a max-width of 250px with a height of auto. */
.planet-img img {
  height: auto;
}

.planet-img img {
  max-width: 250px;
}

/* The 6th planet image (Saturn) needs to appear larger due to the image border. */
.planet-card-container article:nth-of-type(6) .planet-img img {
  max-width: 380px;
}

/* Adding white space to the planet card. */
.planet-card {
  transition: 0.3s;
  padding: 3rem 2rem;
}

/* White space around the planet card content. */
.article-content {
  padding: 20px;
}

.article-content h3 {
  color: var(--white);
  margin-bottom: 2rem;
  
}

/* Planet card unordered list styles. */
.article-content ul {
  /* Remove default list styles. */
  list-style: none;
  /* Remove default padding and margins from the unordered list elements. */
  padding: 0;
  margin: 0;
  /* The list will display as flex with the wrap property, to allow all list item children to wrap when there isn't enough space in the container to prevent overflow. */
  display: flex;
  flex-wrap: wrap;
  /* Center the content. */
  justify-content: center;
  /* White space between the flex items. */
  gap: 1rem;
}

.article-content ul li {
  /* Add theme properties to the planet list items. */
  background-color: rgb(10, 10, 10, 0.5);
  padding: 0.5rem 1rem;
  color: var(--white);
  border-radius: 0.25rem;
  transition: var(--transition);
}

/* Transform on hover of the planet list item elements. */
.article-content ul li:hover {
  transform: translateX(0.2rem);
}

/* End of Grid Section Container Styles */


/* Start of Space News Styles */

#space-news {
  margin: 0 auto;
  max-width: 1600px;
  padding: 5rem 0 10rem 0;
}

/* Container to hold the news image and content side by each using grid columns. */
#space-news article {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  /* Center the content */
  justify-content: center;
  align-items: center;
  align-content: center;
  /* Top and bottom white space between each fetched news article. */
  margin: 3rem 0;
}

/* News image styles. */
.news-img img {
  /* Fixed width and height for all news images to keep them consistent. */
  max-width: 300px;
  height: 300px;
  /* Round all images with border radius. */
  border-radius: 0.5rem;
  /* Add a filtering and opacity property to more closely match the theme of the website pages. */
  filter: opacity(0.8);
  mix-blend-mode: luminosity;
  object-fit: cover;
}

/* News image container grid */
#space-news article figure {
  /* News image starts in the 2nd column and ends at the 5th. */
  grid-area: 1 / 2 / 2 / 5;
  
}

/* News content container grid. */
#space-news article div {
  /* News article content starts at the 4th column and ends at the 11th. */
  grid-area: 1 / 4 / 2 / 11;
  padding: 4rem;
}

/* Remove global padding for the news article paragraph contents. */
#space-news article div p {
  padding: 0;
}

/* Recenter the news article image and text contents at screen widths of 1400px wide */
@media screen and (max-width: 1400px) {

  /* News image container grid */
  #space-news article figure {
    grid-area: 1 / 2 / 2 / 5;
  }

  #space-news article div {
    grid-area: 1 / 5 / 2 / 11;
    padding: 2rem;
  }
}

/* At device widths of 600px wide, remove the image visiually with visibility: hidden, this still keeps the imag ein the DOM for accessibility needs. */
@media screen and (max-width: 600px) {

  .news-img img {
    visibility: hidden;
  }

  /* The article text content container will take up all of the grid space, spanning the entirey of 11 columns wide. */
  #space-news article div {
    grid-area: 1 / 1 / 1 / 11;
    text-align: center;
  }
}

/* News article heading, body copy, and anchor styles. */
#space-news article h3 {
  color: var(--primary-color);
  margin-bottom: 1.75rem;
}

#space-news article p {
  color: var(--white);
}

#space-news article div p:nth-of-type(2) {
  font-family: var(--links-font);
  font-size: clamp(0.8rem, 2vw, var(--font-xxs));
}

/* End of Space News Styles */

#add-planet,
#planet-collection {
  justify-content: center;
  justify-items: center;
  min-height: 100vh;
  padding: 20rem 0;
}

@media screen and (max-width: 1200px){
  #add-planet {
    padding: 15rem 0;
  }
}

#planet-collection {
  display: grid;
}

.add-planet-wrapper,
.planet-collection-wrapper {
  /* Thank you to Adobe Stock for the background image graphic, reference here: https://stock.adobe.com/ca/images/vector-flat-space-design-background-with-small-elements/217913053?prev_url=detail */
  background-image: radial-gradient(circle, rgba(22, 22, 22, 0.7) 0%, rgba(13, 13, 13, 0.95) 100%), 
  url(../src/images/landing-images/galaxy-map-image.jpeg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}

/* Set the width of the form contents */
#add-planet form {
  max-width: 860px;
  /* Center the form container. */
  margin: 0 auto;
  padding: 1.2em 1em;
  text-align: center;
}

/* Form primary heading styles. */
#add-planet form h1 {
  /* Dynamically adjust the font size depending on the vertical width of the viewport. */
  font-size: clamp(var(--font-lg), 5vw, var(--secondary-heading));
  color: var(--primary-color);
  text-transform: uppercase;
}

/* Form content styles. */
#add-planet form p {
  color: var(--white);
  max-width: 600px;
  margin: 2rem auto;
}

#add-planet form h1,
#add-planet form p {
  text-align: center;
}

#add-planet-btn {
 margin: 2rem auto 0 auto;
}

/* Form label styles. */
#add-planet .form-label {
  color: var(--white);
  font-family: var(--heading-font);
  text-align: left;
  margin: 1rem 0;
}

/* White space between the form labels and text area field. */
#add-planet form > div:nth-of-type(4) .form-label {
  margin-top: 2rem;
}

#add-planet form > div:nth-of-type(4) textarea {
  margin-bottom: 2rem;
}

/* Overwriting bootstrap form styles of the form-control class. */
#add-planet .form-control {
  display: block;
  width: 100%;
  padding: 0.375rem 0.75rem;
  /* Font properties. */
  font-size: 1rem;
  font-weight: 400;
  font-family: var(--heading-font);
  line-height: 1.5;
  letter-spacing: 0.1rem;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-clip: padding-box;
  /* Border properties. */
  border: 1px solid var(--primary-color);
  border-radius: 0;
  outline: 0.15rem solid var(--light-slate-black);
  /* Theme Properties. */
  color: var(--light-slate-black);
  box-shadow: 6px 6px 0 0 var(--primary-color);
  transition: var(--transition);
}

/* On hover of the form-control inputs, the element will change colours and shift downwards slightly on the Y axis, indicating to the user that they are able to interact with the inputs. */
#add-planet .form-control:hover  {
  transform: translateY(0.1rem);
  background-color: var(--primary-color);
  color: var(--white);
  box-shadow: 6px 6px 0 0 var(--white);
}

/* When a form field is in the focused state, the background will disappear to indicate that the input is selected and ready to type text into.  */
#add-planet .form-control:focus {
  color: var(--white);
  background-color: transparent;
  outline: 0;
  transition: var(--transition);
  box-shadow: 0 0 0 0.15rem rgba(255, 255, 255, 0.8)
}

/* Remove the default bootstrap border from any buttons with the type equal to submit. */
#add-planet [type=submit] {
  border: none;
}

/* Custom planet grid container, creates 3 equal columns. */
#custom-planet {
 display: grid;
 grid-template-columns: repeat(3, 1fr);
 grid-gap: 3rem;
 /* Center the container contents. */
 text-align: center;
 min-height: 100vh;
 justify-content: center;
 /* Set a max-width of the container */
 max-width: 1600px;
 padding: 5rem 2rem 15rem 2rem;
}

/* On device widths of 1366px, the custom planets container will change into a two column layout */
@media screen and (max-width: 1366px) {
  #custom-planet {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* Convert the custom planets container to a single column layout on device widths of 820px. */
@media screen and (max-width: 820px) {
  #custom-planet {
    grid-template-columns: 1fr;
  }
}

/* Custom planet article heading styles. */
#custom-planet-card-container h3 {
  color: var(--primary-color);
  /* Dynamically scale the font size depending on the viewports vertical width. */
  font-size: clamp(var(--font-lg), 5vw, 2rem);
  font-family: var(--links-font);
  text-transform: capitalize;
}

#custom-planet ul {
  /* Remove default list styles. */
  list-style: none;
  /* Remove default padding and margins from the unordered list elements. */
  padding: 0;
  margin: 2rem 0;
  /* The list will display as flex with the wrap property, to allow all list item children to wrap when there isn't enough space in the container to prevent overflow. */
  display: flex;
  flex-wrap: wrap;
  /* Center the content. */
  justify-content: center;
  /* White space between the flex items. */
  gap: 1rem;
}

/* Custom planet unordered list styles. */
#custom-planet ul li,
#custom-planet p {
  background-color: rgba(84, 125, 201, 0.05);
  /* White space. */
  padding: 0.8rem 2rem;
  color: var(--white);
  text-decoration: none;
  letter-spacing: 0.1rem;
  margin-top: 1rem;
  /* Set up a transition so when this element is hovered later on. */
  transition: var(--transition);
  /* Font properties. */
  font-family: var(--heading-font);
  font-size: clamp(0.8rem, 2vw, var(--font-xxs));
}

/* Custom planet list item hover styles. */
#custom-planet ul li:hover,
#custom-planet p:hover {
  transform: translateX(0.2rem) scale(1.01);
  background-color: var(--white);
  color: var(--light-slate-black);
}

/* Custom planet article card paragraph styles. */
#custom-planet-card-container p {
  margin-top: 2rem;
  font-family: var(--links-font);
  color: var(--white);
  font-size: clamp(1rem, 2vw, var(--font-xxs));
}

/* Custom planet Explore and Add buttons anchor styles. */
.intro-button-container {
  /* Center the button container. */
  max-width: 600px;
  margin: 0 auto;
  /* Display the buttons side by each with flex. */
  display: flex;
  /* Space the children (anchor elements) */
  gap: 3rem;
  /* Center the container contents. */
  justify-content: center;
  align-items: center;
}

/* When the device width is 768px wide (mobile), the container will change to flex-direction column to allow the anchors to stack vertically without overflow. */
@media screen and (max-width: 768px) {
  .intro-button-container {
    flex-direction: column;
  }
}

/* Start of Back to Top Button Styles */
#back-to-top {
  border: none;
  /* Hide the button initially */
  display: none;
  /* Position the button off screen to allow the fade in animation to bring it into the viewport. */
  position: fixed;
  right: 50px;
  bottom: 50px;
  /* Set the z-index to the top of the stack order, to allow the button to be visible anywhere in the document. */
  z-index: 10;
  cursor: pointer;
  /* Set the opacity, transition, and animation properties for keyframe animation */
  opacity: 0;
  /* Transition and animatioon property set up. */
  transition: opacity 0.3s ease-in-out;
  animation: fadeIn 0.3s forwards;
}

/* On mobile devices, the back to top button will become slightly smaller and move off to the bottom right corner to prevent blocking important elements. */
@media screen and (max-width: 768px) {
  #back-to-top {
    right: 20px;
    bottom: 20px;
  }

  #back-to-top svg {
    width: 70px;
    height: 70px;
  }
}

/* Set up a transition for when the SVG is hovered */
#back-to-top svg {
  transition: 0.3s ease-in-out;
}

/* On SVG hover, adjust the fill, to indicate the button is clickable. */
#back-to-top svg:hover .st0,
#back-to-top svg:hover .st1 {
  fill: rgb(138, 179, 255);
}

/* Translate the button up slightly. */
#back-to-top svg:hover {
  transform: translateY(-0.2rem);
}


/* Back to Top Button Keyframes */
@keyframes fadeIn {
  
  /* Keyframes to control the fade in and fade out of the back to top button. */
  0% {
    opacity: 0;
    transform: translateX(100%);
  }
  
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

/* End of Back to Top Button Styles */